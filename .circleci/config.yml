# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0

    environment:
      #Customize JVM Max Heap limit
      MAVEN_OPTS: -Xmx3200m

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Download and Cache dependencies
      - restore_cache:
          keys:
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      # Goal that resolves all project dependencies,
      # including plugins and reports and their dependencies.
      - run: mvn dependency:go-offline

      - save_cache:
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      - store_artifacts:
          path: target
      #then verify integration tests
      - run:
          name: Integration Test
          command: mvn verify
      #upload to codecov
      - codecov/upload:
          token: b924fa69-cfe2-4ef9-bcc0-0584e1d12f2a
          file: target/site/jacoco/jacoco.xml

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
